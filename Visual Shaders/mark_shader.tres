[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://bakc8muu5hxsb"]

[ext_resource type="Texture2D" uid="uid://c1ya3r6qfp7wu" path="res://Textures/floor_mark_texture.png" id="1_jd8tg"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_l8cyv"]
expanded_output_ports = [0]
texture = ExtResource("1_jd8tg")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_eqd7h"]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_i6unw"]
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_1uhf2"]
parameter_name = "mark_color"
default_value_enabled = true
default_value = Color(0.5, 1, 3, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 mark_color : source_color = vec4(0.500000, 1.000000, 3.000000, 1.000000);
uniform sampler2D tex_frg_2;



void fragment() {
// ColorParameter:5
	vec4 n_out5p0 = mark_color;


// Input:3
	vec4 n_out3p0 = COLOR;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);
	float n_out2p1 = n_out2p0.r;


// FloatOp:4
	float n_out4p0 = n_out3p0.x * n_out2p1;


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	ALPHA = n_out4p0;


}
"
graph_offset = Vector2(-465.156, -57.4827)
flags/unshaded = true
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_l8cyv")
nodes/fragment/2/position = Vector2(-380, 440)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_eqd7h")
nodes/fragment/3/position = Vector2(-400, 180)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_i6unw")
nodes/fragment/4/position = Vector2(-80, 300)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_1uhf2")
nodes/fragment/5/position = Vector2(40, 20)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 0, 1, 5, 0, 0, 0, 2, 1, 4, 1)
