[gd_resource type="VisualShader" load_steps=21 format=3 uid="uid://st1p2na1fab7"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ndj43"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_52stk"]
parameter_name = "noise_scroll_speed"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_suj8p"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4hbs1"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vwe51"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_k0ap4"]
parameter_name = "noise_uv_scale"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_4ybqq"]
parameter_name = "fire_texture"

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_whibx"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_odm4w"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ds0gr"]
parameter_name = "fire_color"
default_value_enabled = true
default_value = Color(1, 0.496, 0.16, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_llk0j"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_rwxkk"]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_8h53f"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_epgcn"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dgh2l"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
expanded_output_ports = [0]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_qteba"]
parameter_name = "noise_texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_44832"]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1bnew"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_5nwlq"]

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_835jr"]
billboard_type = 3
keep_scale = true

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx, depth_prepass_alpha, unshaded;

uniform vec4 fire_color : source_color = vec4(1.000000, 0.496000, 0.160000, 1.000000);
uniform sampler2D fire_texture;
uniform vec2 noise_uv_scale = vec2(1.000000, 1.000000);
uniform vec2 noise_scroll_speed;
uniform sampler2D noise_texture;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __wm = mat4(normalize(INV_VIEW_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]), normalize(INV_VIEW_MATRIX[2]), MODEL_MATRIX[3]);
		__wm = __wm * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		__wm = __wm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = VIEW_MATRIX * __wm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// ColorParameter:22
	vec4 n_out22p0 = fire_color;


// Input:4
	vec4 n_out4p0 = COLOR;
	float n_out4p4 = n_out4p0.a;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(fire_texture, UV);


	vec3 n_out21p0;
// ColorFunc:21
	{
		vec3 c = vec3(n_out3p0.xyz);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out21p0 = vec3(max2, max2, max2);
	}


// Input:10
	vec2 n_out10p0 = UV;


// Vector2Parameter:15
	vec2 n_out15p0 = noise_uv_scale;


// VectorOp:14
	vec2 n_out14p0 = n_out10p0 * n_out15p0;


// Input:12
	float n_out12p0 = TIME;


// Vector2Parameter:11
	vec2 n_out11p0 = noise_scroll_speed;


// VectorOp:13
	vec2 n_out13p0 = vec2(n_out12p0) * n_out11p0;


// UVFunc:9
	vec2 n_in9p1 = vec2(1.00000, 1.00000);
	vec2 n_out9p0 = n_out13p0 * n_in9p1 + n_out14p0;


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(noise_texture, n_out9p0);


	vec3 n_out20p0;
// ColorFunc:20
	{
		vec3 c = vec3(n_out7p0.xyz);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out20p0 = vec3(max2, max2, max2);
	}


// VectorOp:8
	vec4 n_out8p0 = vec4(n_out21p0, 0.0) * vec4(n_out20p0, 0.0);


// VectorOp:5
	vec4 n_out5p0 = n_out4p0 * n_out8p0;


// VectorOp:23
	vec3 n_out23p0 = vec3(n_out22p0.xyz) * vec3(n_out5p0.xyz);


// FloatOp:24
	float n_out24p0 = n_out4p4 * n_out5p0.x;


// Output:0
	ALBEDO = n_out23p0;
	ALPHA = n_out24p0;


}
"
graph_offset = Vector2(-309.079, -164.25)
modes/cull = 2
flags/depth_prepass_alpha = true
flags/unshaded = true
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_835jr")
nodes/vertex/2/position = Vector2(-180, 260)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/0/position = Vector2(700, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_4ybqq")
nodes/fragment/2/position = Vector2(-1240, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_8h53f")
nodes/fragment/3/position = Vector2(-860, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_epgcn")
nodes/fragment/4/position = Vector2(-340, 80)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_dgh2l")
nodes/fragment/5/position = Vector2(80, 320)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture2DParameter_qteba")
nodes/fragment/6/position = Vector2(-1100, 980)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_44832")
nodes/fragment/7/position = Vector2(-740, 740)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_1bnew")
nodes/fragment/8/position = Vector2(-220, 440)
nodes/fragment/9/node = SubResource("VisualShaderNodeUVFunc_5nwlq")
nodes/fragment/9/position = Vector2(-1040, 720)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_ndj43")
nodes/fragment/10/position = Vector2(-1760, 600)
nodes/fragment/11/node = SubResource("VisualShaderNodeVec2Parameter_52stk")
nodes/fragment/11/position = Vector2(-1720, 1140)
nodes/fragment/12/node = SubResource("VisualShaderNodeInput_suj8p")
nodes/fragment/12/position = Vector2(-1720, 1020)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_4hbs1")
nodes/fragment/13/position = Vector2(-1340, 960)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorOp_vwe51")
nodes/fragment/14/position = Vector2(-1340, 700)
nodes/fragment/15/node = SubResource("VisualShaderNodeVec2Parameter_k0ap4")
nodes/fragment/15/position = Vector2(-1740, 700)
nodes/fragment/20/node = SubResource("VisualShaderNodeColorFunc_whibx")
nodes/fragment/20/position = Vector2(-540, 660)
nodes/fragment/21/node = SubResource("VisualShaderNodeColorFunc_odm4w")
nodes/fragment/21/position = Vector2(-540, 480)
nodes/fragment/22/node = SubResource("VisualShaderNodeColorParameter_ds0gr")
nodes/fragment/22/position = Vector2(60, -120)
nodes/fragment/23/node = SubResource("VisualShaderNodeVectorOp_llk0j")
nodes/fragment/23/position = Vector2(400, -140)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatOp_rwxkk")
nodes/fragment/24/position = Vector2(440, 200)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 4, 0, 5, 0, 6, 0, 7, 2, 9, 0, 7, 0, 12, 0, 13, 0, 11, 0, 13, 1, 13, 0, 9, 2, 10, 0, 14, 0, 15, 0, 14, 1, 14, 0, 9, 0, 7, 0, 20, 0, 20, 0, 8, 1, 3, 0, 21, 0, 21, 0, 8, 0, 8, 0, 5, 1, 22, 0, 23, 0, 23, 0, 0, 0, 5, 0, 23, 1, 4, 4, 24, 0, 24, 0, 0, 1, 5, 0, 24, 1)
